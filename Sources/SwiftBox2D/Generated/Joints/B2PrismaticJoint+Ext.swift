// HEADS UP!: Auto-generated file, changes made directly here will be overwritten by code generators.
// Generated by generate_types.py

import box2d

public extension B2PrismaticJoint {
    /// Enable/disable the joint spring.
    func enableSpring(_ enableSpring: Bool) {
        b2PrismaticJoint_EnableSpring(id, enableSpring)
    }
    
    /// Is the prismatic joint spring enabled or not?
    func isSpringEnabled() -> Bool {
        b2PrismaticJoint_IsSpringEnabled(id)
    }
    
    /// Enable/disable a prismatic joint limit
    func enableLimit(_ enableLimit: Bool) {
        b2PrismaticJoint_EnableLimit(id, enableLimit)
    }
    
    /// Is the prismatic joint limit enabled?
    func isLimitEnabled() -> Bool {
        b2PrismaticJoint_IsLimitEnabled(id)
    }
    
    /// Get the prismatic joint lower limit
    func getLowerLimit() -> Float {
        b2PrismaticJoint_GetLowerLimit(id)
    }
    
    /// Get the prismatic joint upper limit
    func getUpperLimit() -> Float {
        b2PrismaticJoint_GetUpperLimit(id)
    }
    
    /// Set the prismatic joint limits
    func setLimits(_ lower: Float, _ upper: Float) {
        b2PrismaticJoint_SetLimits(id, lower, upper)
    }
    
    /// Enable/disable a prismatic joint motor
    func enableMotor(_ enableMotor: Bool) {
        b2PrismaticJoint_EnableMotor(id, enableMotor)
    }
    
    /// Is the prismatic joint motor enabled?
    func isMotorEnabled() -> Bool {
        b2PrismaticJoint_IsMotorEnabled(id)
    }
    
    /// Get the prismatic joint current motor force, typically in newtons
    func getMotorForce() -> Float {
        b2PrismaticJoint_GetMotorForce(id)
    }
    
    ///  Get the prismatic joint stiffness in Hertz
    /// Set the prismatic joint stiffness in Hertz.
    /// This should usually be less than a quarter of the simulation rate. For example, if the simulation
    /// runs at 60Hz then the joint stiffness should be 15Hz or less.
    var springHertz: Float {
        get {
            b2PrismaticJoint_GetSpringHertz(id)
        }
        set(hertz) {
            b2PrismaticJoint_SetSpringHertz(id, hertz)
        }
    }
    
    /// Get the prismatic spring damping ratio (non-dimensional)
    /// Set the prismatic joint damping ratio (non-dimensional)
    var springDampingRatio: Float {
        get {
            b2PrismaticJoint_GetSpringDampingRatio(id)
        }
        set(dampingRatio) {
            b2PrismaticJoint_SetSpringDampingRatio(id, dampingRatio)
        }
    }
    
    /// Get the prismatic joint motor speed, typically in meters per second
    /// Set the prismatic joint motor speed, typically in meters per second
    var motorSpeed: Float {
        get {
            b2PrismaticJoint_GetMotorSpeed(id)
        }
        set(motorSpeed) {
            b2PrismaticJoint_SetMotorSpeed(id, motorSpeed)
        }
    }
    
    /// Get the prismatic joint maximum motor force, typically in newtons
    /// Set the prismatic joint maximum motor force, typically in newtons
    var maxMotorForce: Float {
        get {
            b2PrismaticJoint_GetMaxMotorForce(id)
        }
        set(force) {
            b2PrismaticJoint_SetMaxMotorForce(id, force)
        }
    }
}
