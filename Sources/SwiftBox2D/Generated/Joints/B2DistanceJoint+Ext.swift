// HEADS UP!: Auto-generated file, changes made directly here will be overwritten by code generators.
// Generated by generate_types.py

import box2d

public extension B2DistanceJoint {
    /// Enable/disable the distance joint spring. When disabled the distance joint is rigid.
    func enableSpring(_ enableSpring: Bool) {
        b2DistanceJoint_EnableSpring(id, enableSpring)
    }
    
    /// Is the distance joint spring enabled?
    func isSpringEnabled() -> Bool {
        b2DistanceJoint_IsSpringEnabled(id)
    }
    
    /// Enable joint limit. The limit only works if the joint spring is enabled. Otherwise the joint is rigid
    /// and the limit has no effect.
    func enableLimit(_ enableLimit: Bool) {
        b2DistanceJoint_EnableLimit(id, enableLimit)
    }
    
    /// Is the distance joint limit enabled?
    func isLimitEnabled() -> Bool {
        b2DistanceJoint_IsLimitEnabled(id)
    }
    
    /// Set the minimum and maximum length parameters of a distance joint
    func setLengthRange(_ minLength: Float, _ maxLength: Float) {
        b2DistanceJoint_SetLengthRange(id, minLength, maxLength)
    }
    
    /// Get the distance joint minimum length
    func getMinLength() -> Float {
        b2DistanceJoint_GetMinLength(id)
    }
    
    /// Get the distance joint maximum length
    func getMaxLength() -> Float {
        b2DistanceJoint_GetMaxLength(id)
    }
    
    /// Get the current length of a distance joint
    func getCurrentLength() -> Float {
        b2DistanceJoint_GetCurrentLength(id)
    }
    
    /// Enable/disable the distance joint motor
    func enableMotor(_ enableMotor: Bool) {
        b2DistanceJoint_EnableMotor(id, enableMotor)
    }
    
    /// Is the distance joint motor enabled?
    func isMotorEnabled() -> Bool {
        b2DistanceJoint_IsMotorEnabled(id)
    }
    
    /// Get the distance joint current motor force, typically in newtons
    func getMotorForce() -> Float {
        b2DistanceJoint_GetMotorForce(id)
    }
    
    ///  Get the rest length of a distance joint
    /// Set the rest length of a distance joint
    /// - param jointId: The id for a distance joint
    /// - param length: The new distance joint length
    var length: Float {
        get {
            b2DistanceJoint_GetLength(id)
        }
        set(length) {
            b2DistanceJoint_SetLength(id, length)
        }
    }
    
    /// Get the spring Hertz
    /// Set the spring stiffness in Hertz
    var springHertz: Float {
        get {
            b2DistanceJoint_GetSpringHertz(id)
        }
        set(hertz) {
            b2DistanceJoint_SetSpringHertz(id, hertz)
        }
    }
    
    /// Get the spring damping ratio
    /// Set the spring damping ratio, non-dimensional
    var springDampingRatio: Float {
        get {
            b2DistanceJoint_GetSpringDampingRatio(id)
        }
        set(dampingRatio) {
            b2DistanceJoint_SetSpringDampingRatio(id, dampingRatio)
        }
    }
    
    /// Get the distance joint motor speed, typically in meters per second
    /// Set the distance joint motor speed, typically in meters per second
    var motorSpeed: Float {
        get {
            b2DistanceJoint_GetMotorSpeed(id)
        }
        set(motorSpeed) {
            b2DistanceJoint_SetMotorSpeed(id, motorSpeed)
        }
    }
    
    /// Get the distance joint maximum motor force, typically in newtons
    /// Set the distance joint maximum motor force, typically in newtons
    var maxMotorForce: Float {
        get {
            b2DistanceJoint_GetMaxMotorForce(id)
        }
        set(force) {
            b2DistanceJoint_SetMaxMotorForce(id, force)
        }
    }
}
