// HEADS UP!: Auto-generated file, changes made directly here will be overwritten by code generators.
// Generated by generate_types.py

import box2d

/// A solid capsule can be viewed as two semicircles connected
/// by a rectangle.
public typealias B2Capsule = b2Capsule

extension B2Capsule: @retroactive CustomStringConvertible, @retroactive Equatable, @retroactive Hashable { }

public extension B2Capsule {
    var description: String {
        "b2Capsule(center1: \(center1), center2: \(center2), radius: \(radius))"
    }
    
    static func == (_ lhs: Self, _ rhs: Self) -> Bool {
        lhs.center1 == rhs.center1 && lhs.center2 == rhs.center2 && lhs.radius == rhs.radius
    }
    
    func hash(into hasher: inout Hasher) {
        hasher.combine(center1)
        hasher.combine(center2)
        hasher.combine(radius)
    }
}
