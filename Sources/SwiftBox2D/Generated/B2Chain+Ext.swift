// HEADS UP!: Auto-generated file, changes made directly here will be overwritten by code generators.
// Generated by generate_types.py

import box2d

public extension B2Chain {
    /// Get the world that owns this chain shape
    func getWorld() -> b2WorldId {
        b2Chain_GetWorld(id)
    }
    
    /// Get the number of segments on this chain
    func getSegmentCount() -> Int32 {
        b2Chain_GetSegmentCount(id)
    }
    
    /// Fill a user array with chain segment shape ids up to the specified capacity. Returns
    /// the actual number of segments returned.
    func getSegments(_ segmentArray: UnsafeMutablePointer<b2ShapeId>?, _ capacity: Int32) -> Int32 {
        b2Chain_GetSegments(id, segmentArray, capacity)
    }
    
    /// Chain identifier validation. Provides validation for up to 64K allocations.
    func isValid() -> Bool {
        b2Chain_IsValid(id)
    }
    
    ///  Get the chain friction
    /// Set the chain friction
    /// @see b2ChainDef::friction
    var friction: Float {
        get {
            b2Chain_GetFriction(id)
        }
        set(friction) {
            b2Chain_SetFriction(id, friction)
        }
    }
    
    ///  Get the chain restitution
    /// Set the chain restitution (bounciness)
    /// @see b2ChainDef::restitution
    var restitution: Float {
        get {
            b2Chain_GetRestitution(id)
        }
        set(restitution) {
            b2Chain_SetRestitution(id, restitution)
        }
    }
    
    ///  Get the chain material
    /// Set the chain material
    /// @see b2ChainDef::material
    var material: Int32 {
        get {
            b2Chain_GetMaterial(id)
        }
        set(material) {
            b2Chain_SetMaterial(id, material)
        }
    }
}
